{"version":3,"sources":["Form.js","App.js","index.js"],"names":["MyTextInput","label","props","useField","field","meta","htmlFor","name","touched","error","className","MyCheckbox","children","type","CustomForm","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","id","component","as","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGMA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,2BACrBC,YAASD,GADY,mBACpCE,EADoC,KAC7BC,EAD6B,KAE3C,OACE,qCACE,uBAAOC,QAASJ,EAAMK,KAAtB,SAA6BN,IAC7B,iDAAWC,GAAWE,IACrBC,EAAKG,SAAWH,EAAKI,MACpB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC3B,SAKJE,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaV,EAAY,8BACvBC,YAAS,2BAAKD,GAAN,IAAaW,KAAM,cADJ,mBACtCT,EADsC,KAC/BC,EAD+B,KAE7C,OACE,qCACE,wBAAOK,UAAU,WAAjB,UACE,+CAAOG,KAAK,YAAeX,GAAWE,IACrCQ,KAGFP,EAAKG,SAAWH,EAAKI,MACpB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC3B,SAiEKK,EA5DI,WACjB,OACE,cAAC,IAAD,CACEC,cAAe,CACbR,KAAM,GACNS,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAETC,iBAAkBC,IAAW,CAC3Bf,KAAMe,MACHC,IAAI,EAAG,4FACPC,SAAS,sGACZR,MAAOM,MACJN,MAAM,iHACNQ,SAAS,sGACZP,OAAQK,MACLC,IAAI,EAAG,iDACPC,SAAS,sGACZN,SAAUI,MAAaE,SAAS,yFAChCL,KAAMG,MAAaC,IAAI,GAAI,mGAC3BH,MAAOE,MACJE,SAAS,kHACTC,MAAM,EAAC,GAAO,oHAEnBC,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,KAzBjE,SA2BE,eAAC,IAAD,CAAMjB,UAAU,OAAhB,UACE,uHACA,cAAC,EAAD,CAAaT,MAAM,8CAAW+B,GAAG,OAAOzB,KAAK,OAAOM,KAAK,SACzD,cAAC,EAAD,CACEZ,MAAO,0DACP+B,GAAG,QACHzB,KAAK,QACLM,KAAK,UAEP,uBAAOP,QAAQ,SAAf,0EACA,cAAC,IAAD,CAAO0B,GAAG,SAASzB,KAAK,SAASM,KAAK,WACtC,cAAC,IAAD,CAAcH,UAAU,QAAQH,KAAK,SAAS0B,UAAU,QACxD,uBAAO3B,QAAQ,WAAf,kDACA,eAAC,IAAD,CAAO0B,GAAG,WAAWzB,KAAK,WAAW2B,GAAG,SAAxC,UACE,wBAAQC,MAAM,GAAd,mGACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAAC,IAAD,CAAczB,UAAU,QAAQH,KAAK,WAAW0B,UAAU,QAC1D,uBAAO3B,QAAQ,OAAf,6FACA,cAAC,IAAD,CAAO0B,GAAG,OAAOzB,KAAK,OAAO2B,GAAG,aAChC,cAAC,IAAD,CAAcxB,UAAU,QAAQH,KAAK,OAAO0B,UAAU,QACtD,cAAC,EAAD,CAAY1B,KAAK,QAAjB,kQAGA,wBAAQM,KAAK,SAAb,0EC3EOuB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACI,cAAC,EAAD,OCFR2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c8a380ec.chunk.js","sourcesContent":["import { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.name}>{label}</label>\n      <input {...props} {...field} />\n      {meta.touched && meta.error ? (\n        <div className='error'>{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  return (\n    <>\n      <label className='checkbox'>\n        <input type='checkbox' {...props} {...field} />\n        {children}\n      </label>\n\n      {meta.touched && meta.error ? (\n        <div className='error'>{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst CustomForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        amount: 0,\n        currency: \"\",\n        text: \"\",\n        terms: false,\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .min(2, \"Минимум 2 символа!\")\n          .required(\"Обязательное поле!\"),\n        email: Yup.string()\n          .email(\"Неправильный email адрес\")\n          .required(\"Обязательное поле!\"),\n        amount: Yup.number()\n          .min(5, \"Не менее 5\")\n          .required(\"Обязательное поле!\"),\n        currency: Yup.string().required(\"Выберите валюту\"),\n        text: Yup.string().min(10, \"Не менее 10 символов\"),\n        terms: Yup.boolean()\n          .required(\"Необходимо согласие!\")\n          .oneOf([true], \"Необходимо согласие!\"),\n      })}\n      onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\n    >\n      <Form className='form'>\n        <h2>Заполнить форму</h2>\n        <MyTextInput label='Ваше имя' id='name' name='name' type='text' />\n        <MyTextInput\n          label={\"Ваша почта\"}\n          id='email'\n          name='email'\n          type='email'\n        />\n        <label htmlFor='amount'>Количество</label>\n        <Field id='amount' name='amount' type='number' />\n        <ErrorMessage className='error' name='amount' component='div' />\n        <label htmlFor='currency'>Валюта</label>\n        <Field id='currency' name='currency' as='select'>\n          <option value=''>Выберите валюту</option>\n          <option value='USD'>USD</option>\n          <option value='RUB'>RUB</option>\n        </Field>\n        <ErrorMessage className='error' name='currency' component='div' />\n        <label htmlFor='text'>Ваше сообщение</label>\n        <Field id='text' name='text' as='textarea' />\n        <ErrorMessage className='error' name='text' component='div' />\n        <MyCheckbox name='terms'>\n          Соглашаетесь с политикой конфиденциальности?\n        </MyCheckbox>\n        <button type='submit'>Отправить</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CustomForm;\n","import './app.scss';\nimport CustomForm from './Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <CustomForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}